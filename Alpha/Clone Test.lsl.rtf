{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //\
// Makes a Nurb Map in a sphere around its center.\
\
vector gPos ;\
float gRadius ;\
integer gGrid = 32 ; \
float gDeg ;\
\
//\
// Make the Nurb Map\
MakeNurbMap() \{\
    float i ;\
    float j ;\
    float x ;\
    float y ;\
    float z ;\
    \
    gDeg =  ( 360 / ( gGrid - 2 ) ) ;  \
    vector scale = llGetScale() ;\
    gRadius = ( scale.x / 2 ) + .1 ;   \
    \
    float rstep = ( gRadius * 2 ) / gGrid ;\
    float starti = 0 ;\
    float dia = ( gRadius * 2 ) ; \
    for( x = ( ( dia / 2 ) - dia ) ; x <= ( dia / 2 ) ; x = x + rstep ) \{\
        float b = llFabs( x ) ; \
        float c = gRadius ;\
        float r = llSqrt( llPow(c,2) - llPow(b,2) ) ;\
        for( j = 0 ; j <= ( gGrid - 1 ) ; j = j + 1 ) \{\
            float jrads = ( gDeg * j ) * DEG_TO_RAD ;\
            y = r * llSin(jrads) ; \
            z = r * llCos(jrads) ;\
            llRezObject("Nurb", gPos + <x,y,z>, ZERO_VECTOR, ZERO_ROTATION, 1 );\
        \}\
    \}\
\}\
                \
    \
\
default\
\{\
    state_entry()\
    \{\
        llSay(0, "Hello, Avatar!");\
        gPos = llGetPos() ;\
        gDeg = 360 / gGrid ;  \
        vector scale = llGetScale() ;\
        gRadius = ( scale.x / 2 ) + .1 ;      \
    \}\
\
    touch_start(integer total_number)\
    \{\
        MakeNurbMap() ;\
    \}\
\}\
\
\
}